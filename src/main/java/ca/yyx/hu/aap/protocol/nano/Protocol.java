// Generated by the protocol buffer compiler.  DO NOT EDIT!

package ca.yyx.hu.aap.protocol.nano;

@SuppressWarnings("hiding")
public interface Protocol {

  // enum MessageStatus
  public static final int STATUS_OK = 0;

  // enum SensorType
  public static final int SENSOR_TYPE_DRIVING_STATUS = 11;
  public static final int SENSOR_TYPE_NIGHT_DATA = 10;
  public static final int SENSOR_TYPE_RPM = 3;
  public static final int SENSOR_TYPE_DIAGNOSTICS = 8;
  public static final int SENSOR_TYPE_GEAR = 7;
  public static final int SENSOR_TYPE_COMPASS = 1;
  public static final int SENSOR_TYPE_LOCATION = 9;

  // enum AUDIO_TYPE
  public static final int AUDIO_TYPE_SPEECH = 1;
  public static final int AUDIO_TYPE_SYSTEM = 2;
  public static final int AUDIO_TYPE_MEDIA = 3;

  // enum STREAM_TYPE
  public static final int STREAM_TYPE_AUDIO = 1;
  public static final int STREAM_TYPE_VIDEO = 3;

  // enum BLUETOOTH_PARING_METHOD
  public static final int BLUETOOTH_PARING_METHOD_2 = 2;
  public static final int BLUETOOTH_PARING_METHOD_3 = 3;

  // enum VideoFocusMode
  public static final int VIDEO_FOCUS_MODE_1 = 1;
  public static final int VIDEO_FOCUS_MODE_2 = 2;

  public static final class ButtonInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ButtonInfo[] _emptyArray;
    public static ButtonInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ButtonInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required uint32 scan_code = 1;
    public int scanCode;

    // required bool is_pressed = 2;
    public boolean isPressed;

    // required uint32 meta = 3;
    public int meta;

    // required bool long_press = 4;
    public boolean longPress;

    public ButtonInfo() {
      clear();
    }

    public ButtonInfo clear() {
      scanCode = 0;
      isPressed = false;
      meta = 0;
      longPress = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeUInt32(1, this.scanCode);
      output.writeBool(2, this.isPressed);
      output.writeUInt32(3, this.meta);
      output.writeBool(4, this.longPress);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(1, this.scanCode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(2, this.isPressed);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(3, this.meta);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(4, this.longPress);
      return size;
    }

    @Override
    public ButtonInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.scanCode = input.readUInt32();
            break;
          }
          case 16: {
            this.isPressed = input.readBool();
            break;
          }
          case 24: {
            this.meta = input.readUInt32();
            break;
          }
          case 32: {
            this.longPress = input.readBool();
            break;
          }
        }
      }
    }

    public static ButtonInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ButtonInfo(), data);
    }

    public static ButtonInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ButtonInfo().mergeFrom(input);
    }
  }

  public static final class ButtonInfoWrapper extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ButtonInfoWrapper[] _emptyArray;
    public static ButtonInfoWrapper[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ButtonInfoWrapper[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .ca.yyx.hu.aap.protocol.ButtonInfo button = 1;
    public ca.yyx.hu.aap.protocol.nano.Protocol.ButtonInfo[] button;

    public ButtonInfoWrapper() {
      clear();
    }

    public ButtonInfoWrapper clear() {
      button = ca.yyx.hu.aap.protocol.nano.Protocol.ButtonInfo.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.button != null && this.button.length > 0) {
        for (int i = 0; i < this.button.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.ButtonInfo element = this.button[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.button != null && this.button.length > 0) {
        for (int i = 0; i < this.button.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.ButtonInfo element = this.button[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public ButtonInfoWrapper mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.button == null ? 0 : this.button.length;
            ca.yyx.hu.aap.protocol.nano.Protocol.ButtonInfo[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Protocol.ButtonInfo[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.button, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.ButtonInfo();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.ButtonInfo();
            input.readMessage(newArray[i]);
            this.button = newArray;
            break;
          }
        }
      }
    }

    public static ButtonInfoWrapper parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ButtonInfoWrapper(), data);
    }

    public static ButtonInfoWrapper parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ButtonInfoWrapper().mergeFrom(input);
    }
  }

  public static final class TouchInfo extends
      com.google.protobuf.nano.MessageNano {

    // enum TOUCH_ACTION
    public static final int RELEASE = 0;
    public static final int PRESS = 1;
    public static final int DRAG = 2;

    public static final class Location extends
        com.google.protobuf.nano.MessageNano {

      private static volatile Location[] _emptyArray;
      public static Location[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Location[0];
            }
          }
        }
        return _emptyArray;
      }

      // required uint32 x = 1;
      public int x;

      // required uint32 y = 2;
      public int y;

      // required uint32 pointer_id = 3;
      public int pointerId;

      public Location() {
        clear();
      }

      public Location clear() {
        x = 0;
        y = 0;
        pointerId = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeUInt32(1, this.x);
        output.writeUInt32(2, this.y);
        output.writeUInt32(3, this.pointerId);
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.x);
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.y);
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.pointerId);
        return size;
      }

      @Override
      public Location mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.x = input.readUInt32();
              break;
            }
            case 16: {
              this.y = input.readUInt32();
              break;
            }
            case 24: {
              this.pointerId = input.readUInt32();
              break;
            }
          }
        }
      }

      public static Location parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Location(), data);
      }

      public static Location parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Location().mergeFrom(input);
      }
    }

    private static volatile TouchInfo[] _emptyArray;
    public static TouchInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TouchInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .ca.yyx.hu.aap.protocol.TouchInfo.Location location = 1;
    public ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.Location[] location;

    // required uint32 action_index = 2;
    public int actionIndex;

    // required .ca.yyx.hu.aap.protocol.TouchInfo.TOUCH_ACTION action = 3;
    public int action;

    public TouchInfo() {
      clear();
    }

    public TouchInfo clear() {
      location = ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.Location.emptyArray();
      actionIndex = 0;
      action = ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.RELEASE;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.location != null && this.location.length > 0) {
        for (int i = 0; i < this.location.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.Location element = this.location[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      output.writeUInt32(2, this.actionIndex);
      output.writeInt32(3, this.action);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.location != null && this.location.length > 0) {
        for (int i = 0; i < this.location.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.Location element = this.location[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(2, this.actionIndex);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(3, this.action);
      return size;
    }

    @Override
    public TouchInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.location == null ? 0 : this.location.length;
            ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.Location[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.Location[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.location, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.Location();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.Location();
            input.readMessage(newArray[i]);
            this.location = newArray;
            break;
          }
          case 16: {
            this.actionIndex = input.readUInt32();
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.RELEASE:
              case ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.PRESS:
              case ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo.DRAG:
                this.action = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static TouchInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TouchInfo(), data);
    }

    public static TouchInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TouchInfo().mergeFrom(input);
    }
  }

  public static final class InputEvent extends
      com.google.protobuf.nano.MessageNano {

    private static volatile InputEvent[] _emptyArray;
    public static InputEvent[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new InputEvent[0];
          }
        }
      }
      return _emptyArray;
    }

    // required uint64 time_stamp = 1;
    public long timeStamp;

    // optional int32 disp_channel = 2;
    public int dispChannel;

    // optional .ca.yyx.hu.aap.protocol.TouchInfo touch = 3;
    public ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo touch;

    // optional .ca.yyx.hu.aap.protocol.ButtonInfoWrapper button = 4;
    public ca.yyx.hu.aap.protocol.nano.Protocol.ButtonInfoWrapper button;

    public InputEvent() {
      clear();
    }

    public InputEvent clear() {
      timeStamp = 0L;
      dispChannel = 0;
      touch = null;
      button = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeUInt64(1, this.timeStamp);
      if (this.dispChannel != 0) {
        output.writeInt32(2, this.dispChannel);
      }
      if (this.touch != null) {
        output.writeMessage(3, this.touch);
      }
      if (this.button != null) {
        output.writeMessage(4, this.button);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt64Size(1, this.timeStamp);
      if (this.dispChannel != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.dispChannel);
      }
      if (this.touch != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.touch);
      }
      if (this.button != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.button);
      }
      return size;
    }

    @Override
    public InputEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.timeStamp = input.readUInt64();
            break;
          }
          case 16: {
            this.dispChannel = input.readInt32();
            break;
          }
          case 26: {
            if (this.touch == null) {
              this.touch = new ca.yyx.hu.aap.protocol.nano.Protocol.TouchInfo();
            }
            input.readMessage(this.touch);
            break;
          }
          case 34: {
            if (this.button == null) {
              this.button = new ca.yyx.hu.aap.protocol.nano.Protocol.ButtonInfoWrapper();
            }
            input.readMessage(this.button);
            break;
          }
        }
      }
    }

    public static InputEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new InputEvent(), data);
    }

    public static InputEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new InputEvent().mergeFrom(input);
    }
  }

  public static final class BindingRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile BindingRequest[] _emptyArray;
    public static BindingRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BindingRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated int32 scan_codes = 1;
    public int[] scanCodes;

    public BindingRequest() {
      clear();
    }

    public BindingRequest clear() {
      scanCodes = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.scanCodes != null && this.scanCodes.length > 0) {
        for (int i = 0; i < this.scanCodes.length; i++) {
          output.writeInt32(1, this.scanCodes[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.scanCodes != null && this.scanCodes.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.scanCodes.length; i++) {
          int element = this.scanCodes[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.scanCodes.length;
      }
      return size;
    }

    @Override
    public BindingRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.scanCodes == null ? 0 : this.scanCodes.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.scanCodes, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readInt32();
            this.scanCodes = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.scanCodes == null ? 0 : this.scanCodes.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.scanCodes, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readInt32();
            }
            this.scanCodes = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static BindingRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BindingRequest(), data);
    }

    public static BindingRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BindingRequest().mergeFrom(input);
    }
  }

  public static final class BindingResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile BindingResponse[] _emptyArray;
    public static BindingResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BindingResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .ca.yyx.hu.aap.protocol.MessageStatus status = 1;
    public int status;

    public BindingResponse() {
      clear();
    }

    public BindingResponse clear() {
      status = ca.yyx.hu.aap.protocol.nano.Protocol.STATUS_OK;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.status);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.status);
      return size;
    }

    @Override
    public BindingResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.STATUS_OK:
                this.status = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static BindingResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BindingResponse(), data);
    }

    public static BindingResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BindingResponse().mergeFrom(input);
    }
  }

  public static final class SensorBatch extends
      com.google.protobuf.nano.MessageNano {

    public static final class LocationData extends
        com.google.protobuf.nano.MessageNano {

      private static volatile LocationData[] _emptyArray;
      public static LocationData[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new LocationData[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional int64 timestamp = 1;
      public long timestamp;

      // optional int32 latitude = 2;
      public int latitude;

      // optional int32 longitude = 3;
      public int longitude;

      // optional int32 accuracy = 4;
      public int accuracy;

      // optional int32 altitude = 5;
      public int altitude;

      // optional int32 speed = 6;
      public int speed;

      // optional int32 bearing = 7;
      public int bearing;

      public LocationData() {
        clear();
      }

      public LocationData clear() {
        timestamp = 0L;
        latitude = 0;
        longitude = 0;
        accuracy = 0;
        altitude = 0;
        speed = 0;
        bearing = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.timestamp != 0L) {
          output.writeInt64(1, this.timestamp);
        }
        if (this.latitude != 0) {
          output.writeInt32(2, this.latitude);
        }
        if (this.longitude != 0) {
          output.writeInt32(3, this.longitude);
        }
        if (this.accuracy != 0) {
          output.writeInt32(4, this.accuracy);
        }
        if (this.altitude != 0) {
          output.writeInt32(5, this.altitude);
        }
        if (this.speed != 0) {
          output.writeInt32(6, this.speed);
        }
        if (this.bearing != 0) {
          output.writeInt32(7, this.bearing);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.timestamp != 0L) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt64Size(1, this.timestamp);
        }
        if (this.latitude != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(2, this.latitude);
        }
        if (this.longitude != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(3, this.longitude);
        }
        if (this.accuracy != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(4, this.accuracy);
        }
        if (this.altitude != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(5, this.altitude);
        }
        if (this.speed != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(6, this.speed);
        }
        if (this.bearing != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(7, this.bearing);
        }
        return size;
      }

      @Override
      public LocationData mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.timestamp = input.readInt64();
              break;
            }
            case 16: {
              this.latitude = input.readInt32();
              break;
            }
            case 24: {
              this.longitude = input.readInt32();
              break;
            }
            case 32: {
              this.accuracy = input.readInt32();
              break;
            }
            case 40: {
              this.altitude = input.readInt32();
              break;
            }
            case 48: {
              this.speed = input.readInt32();
              break;
            }
            case 56: {
              this.bearing = input.readInt32();
              break;
            }
          }
        }
      }

      public static LocationData parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new LocationData(), data);
      }

      public static LocationData parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new LocationData().mergeFrom(input);
      }
    }

    public static final class NightMode extends
        com.google.protobuf.nano.MessageNano {

      private static volatile NightMode[] _emptyArray;
      public static NightMode[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new NightMode[0];
            }
          }
        }
        return _emptyArray;
      }

      // required bool is_night = 1;
      public boolean isNight;

      public NightMode() {
        clear();
      }

      public NightMode clear() {
        isNight = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeBool(1, this.isNight);
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.isNight);
        return size;
      }

      @Override
      public NightMode mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.isNight = input.readBool();
              break;
            }
          }
        }
      }

      public static NightMode parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new NightMode(), data);
      }

      public static NightMode parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new NightMode().mergeFrom(input);
      }
    }

    public static final class DrivingStatus extends
        com.google.protobuf.nano.MessageNano {

      private static volatile DrivingStatus[] _emptyArray;
      public static DrivingStatus[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new DrivingStatus[0];
            }
          }
        }
        return _emptyArray;
      }

      // required int32 is_driving = 1;
      public int isDriving;

      public DrivingStatus() {
        clear();
      }

      public DrivingStatus clear() {
        isDriving = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeInt32(1, this.isDriving);
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.isDriving);
        return size;
      }

      @Override
      public DrivingStatus mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.isDriving = input.readInt32();
              break;
            }
          }
        }
      }

      public static DrivingStatus parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new DrivingStatus(), data);
      }

      public static DrivingStatus parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new DrivingStatus().mergeFrom(input);
      }
    }

    private static volatile SensorBatch[] _emptyArray;
    public static SensorBatch[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SensorBatch[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .ca.yyx.hu.aap.protocol.SensorBatch.LocationData location_data = 1;
    public ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.LocationData[] locationData;

    // repeated .ca.yyx.hu.aap.protocol.SensorBatch.NightMode night_mode = 10;
    public ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.NightMode[] nightMode;

    // repeated .ca.yyx.hu.aap.protocol.SensorBatch.DrivingStatus driving_status = 13;
    public ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.DrivingStatus[] drivingStatus;

    public SensorBatch() {
      clear();
    }

    public SensorBatch clear() {
      locationData = ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.LocationData.emptyArray();
      nightMode = ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.NightMode.emptyArray();
      drivingStatus = ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.DrivingStatus.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.locationData != null && this.locationData.length > 0) {
        for (int i = 0; i < this.locationData.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.LocationData element = this.locationData[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.nightMode != null && this.nightMode.length > 0) {
        for (int i = 0; i < this.nightMode.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.NightMode element = this.nightMode[i];
          if (element != null) {
            output.writeMessage(10, element);
          }
        }
      }
      if (this.drivingStatus != null && this.drivingStatus.length > 0) {
        for (int i = 0; i < this.drivingStatus.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.DrivingStatus element = this.drivingStatus[i];
          if (element != null) {
            output.writeMessage(13, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.locationData != null && this.locationData.length > 0) {
        for (int i = 0; i < this.locationData.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.LocationData element = this.locationData[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.nightMode != null && this.nightMode.length > 0) {
        for (int i = 0; i < this.nightMode.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.NightMode element = this.nightMode[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(10, element);
          }
        }
      }
      if (this.drivingStatus != null && this.drivingStatus.length > 0) {
        for (int i = 0; i < this.drivingStatus.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.DrivingStatus element = this.drivingStatus[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(13, element);
          }
        }
      }
      return size;
    }

    @Override
    public SensorBatch mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.locationData == null ? 0 : this.locationData.length;
            ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.LocationData[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.LocationData[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.locationData, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.LocationData();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.LocationData();
            input.readMessage(newArray[i]);
            this.locationData = newArray;
            break;
          }
          case 82: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 82);
            int i = this.nightMode == null ? 0 : this.nightMode.length;
            ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.NightMode[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.NightMode[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.nightMode, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.NightMode();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.NightMode();
            input.readMessage(newArray[i]);
            this.nightMode = newArray;
            break;
          }
          case 106: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 106);
            int i = this.drivingStatus == null ? 0 : this.drivingStatus.length;
            ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.DrivingStatus[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.DrivingStatus[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.drivingStatus, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.DrivingStatus();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.SensorBatch.DrivingStatus();
            input.readMessage(newArray[i]);
            this.drivingStatus = newArray;
            break;
          }
        }
      }
    }

    public static SensorBatch parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SensorBatch(), data);
    }

    public static SensorBatch parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SensorBatch().mergeFrom(input);
    }
  }

  public static final class AudioConfiguration extends
      com.google.protobuf.nano.MessageNano {

    private static volatile AudioConfiguration[] _emptyArray;
    public static AudioConfiguration[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AudioConfiguration[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 sample_rate = 1;
    public int sampleRate;

    // required uint32 number_of_bits = 2;
    public int numberOfBits;

    // required uint32 number_of_channels = 3;
    public int numberOfChannels;

    public AudioConfiguration() {
      clear();
    }

    public AudioConfiguration clear() {
      sampleRate = 0;
      numberOfBits = 0;
      numberOfChannels = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.sampleRate != 0) {
        output.writeUInt32(1, this.sampleRate);
      }
      output.writeUInt32(2, this.numberOfBits);
      output.writeUInt32(3, this.numberOfChannels);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.sampleRate != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.sampleRate);
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(2, this.numberOfBits);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(3, this.numberOfChannels);
      return size;
    }

    @Override
    public AudioConfiguration mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.sampleRate = input.readUInt32();
            break;
          }
          case 16: {
            this.numberOfBits = input.readUInt32();
            break;
          }
          case 24: {
            this.numberOfChannels = input.readUInt32();
            break;
          }
        }
      }
    }

    public static AudioConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AudioConfiguration(), data);
    }

    public static AudioConfiguration parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AudioConfiguration().mergeFrom(input);
    }
  }

  public static final class Service extends
      com.google.protobuf.nano.MessageNano {

    public static final class SensorSourceService extends
        com.google.protobuf.nano.MessageNano {

      public static final class Sensor extends
          com.google.protobuf.nano.MessageNano {

        private static volatile Sensor[] _emptyArray;
        public static Sensor[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Sensor[0];
              }
            }
          }
          return _emptyArray;
        }

        // required .ca.yyx.hu.aap.protocol.SensorType type = 1;
        public int type;

        public Sensor() {
          clear();
        }

        public Sensor clear() {
          type = ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_DRIVING_STATUS;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          output.writeInt32(1, this.type);
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.type);
          return size;
        }

        @Override
        public Sensor mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                int value = input.readInt32();
                switch (value) {
                  case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_DRIVING_STATUS:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_NIGHT_DATA:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_RPM:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_DIAGNOSTICS:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_GEAR:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_COMPASS:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_LOCATION:
                    this.type = value;
                    break;
                }
                break;
              }
            }
          }
        }

        public static Sensor parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Sensor(), data);
        }

        public static Sensor parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Sensor().mergeFrom(input);
        }
      }

      private static volatile SensorSourceService[] _emptyArray;
      public static SensorSourceService[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new SensorSourceService[0];
            }
          }
        }
        return _emptyArray;
      }

      // repeated .ca.yyx.hu.aap.protocol.Service.SensorSourceService.Sensor sensors = 1;
      public ca.yyx.hu.aap.protocol.nano.Protocol.Service.SensorSourceService.Sensor[] sensors;

      public SensorSourceService() {
        clear();
      }

      public SensorSourceService clear() {
        sensors = ca.yyx.hu.aap.protocol.nano.Protocol.Service.SensorSourceService.Sensor.emptyArray();
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.sensors != null && this.sensors.length > 0) {
          for (int i = 0; i < this.sensors.length; i++) {
            ca.yyx.hu.aap.protocol.nano.Protocol.Service.SensorSourceService.Sensor element = this.sensors[i];
            if (element != null) {
              output.writeMessage(1, element);
            }
          }
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.sensors != null && this.sensors.length > 0) {
          for (int i = 0; i < this.sensors.length; i++) {
            ca.yyx.hu.aap.protocol.nano.Protocol.Service.SensorSourceService.Sensor element = this.sensors[i];
            if (element != null) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(1, element);
            }
          }
        }
        return size;
      }

      @Override
      public SensorSourceService mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 10);
              int i = this.sensors == null ? 0 : this.sensors.length;
              ca.yyx.hu.aap.protocol.nano.Protocol.Service.SensorSourceService.Sensor[] newArray =
                  new ca.yyx.hu.aap.protocol.nano.Protocol.Service.SensorSourceService.Sensor[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.sensors, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.SensorSourceService.Sensor();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.SensorSourceService.Sensor();
              input.readMessage(newArray[i]);
              this.sensors = newArray;
              break;
            }
          }
        }
      }

      public static SensorSourceService parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new SensorSourceService(), data);
      }

      public static SensorSourceService parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new SensorSourceService().mergeFrom(input);
      }
    }

    public static final class MediaSinkService extends
        com.google.protobuf.nano.MessageNano {

      public static final class VideoConfig extends
          com.google.protobuf.nano.MessageNano {

        // enum VIDEO_RESOLUTION
        public static final int VIDEO_RESOLUTION_800x480 = 1;
        public static final int VIDEO_RESOLUTION_1280x720 = 2;
        public static final int VIDEO_RESOLUTION_1920x1080 = 3;

        // enum VIDEO_FPS
        public static final int VIDEO_FPS_30 = 1;
        public static final int VIDEO_FPS_60 = 2;

        private static volatile VideoConfig[] _emptyArray;
        public static VideoConfig[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new VideoConfig[0];
              }
            }
          }
          return _emptyArray;
        }

        // required .ca.yyx.hu.aap.protocol.Service.MediaSinkService.VideoConfig.VIDEO_RESOLUTION resolution = 1;
        public int resolution;

        // required .ca.yyx.hu.aap.protocol.Service.MediaSinkService.VideoConfig.VIDEO_FPS frame_rate = 2;
        public int frameRate;

        // required uint32 margin_width = 3;
        public int marginWidth;

        // required uint32 margin_height = 4;
        public int marginHeight;

        // required uint32 dpi = 5;
        public int dpi;

        // optional uint32 additional_depth = 6;
        public int additionalDepth;

        public VideoConfig() {
          clear();
        }

        public VideoConfig clear() {
          resolution = ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig.VIDEO_RESOLUTION_800x480;
          frameRate = ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig.VIDEO_FPS_30;
          marginWidth = 0;
          marginHeight = 0;
          dpi = 0;
          additionalDepth = 0;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          output.writeInt32(1, this.resolution);
          output.writeInt32(2, this.frameRate);
          output.writeUInt32(3, this.marginWidth);
          output.writeUInt32(4, this.marginHeight);
          output.writeUInt32(5, this.dpi);
          if (this.additionalDepth != 0) {
            output.writeUInt32(6, this.additionalDepth);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.resolution);
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.frameRate);
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(3, this.marginWidth);
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(4, this.marginHeight);
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(5, this.dpi);
          if (this.additionalDepth != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeUInt32Size(6, this.additionalDepth);
          }
          return size;
        }

        @Override
        public VideoConfig mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                int value = input.readInt32();
                switch (value) {
                  case ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig.VIDEO_RESOLUTION_800x480:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig.VIDEO_RESOLUTION_1280x720:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig.VIDEO_RESOLUTION_1920x1080:
                    this.resolution = value;
                    break;
                }
                break;
              }
              case 16: {
                int value = input.readInt32();
                switch (value) {
                  case ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig.VIDEO_FPS_30:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig.VIDEO_FPS_60:
                    this.frameRate = value;
                    break;
                }
                break;
              }
              case 24: {
                this.marginWidth = input.readUInt32();
                break;
              }
              case 32: {
                this.marginHeight = input.readUInt32();
                break;
              }
              case 40: {
                this.dpi = input.readUInt32();
                break;
              }
              case 48: {
                this.additionalDepth = input.readUInt32();
                break;
              }
            }
          }
        }

        public static VideoConfig parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new VideoConfig(), data);
        }

        public static VideoConfig parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new VideoConfig().mergeFrom(input);
        }
      }

      private static volatile MediaSinkService[] _emptyArray;
      public static MediaSinkService[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new MediaSinkService[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional .ca.yyx.hu.aap.protocol.STREAM_TYPE available_type = 1;
      public int availableType;

      // optional .ca.yyx.hu.aap.protocol.AUDIO_TYPE audio_type = 2;
      public int audioType;

      // repeated .ca.yyx.hu.aap.protocol.AudioConfiguration audio_configs = 3;
      public ca.yyx.hu.aap.protocol.nano.Protocol.AudioConfiguration[] audioConfigs;

      // repeated .ca.yyx.hu.aap.protocol.Service.MediaSinkService.VideoConfig video_configs = 4;
      public ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig[] videoConfigs;

      // optional bool available_while_in_call = 5;
      public boolean availableWhileInCall;

      public MediaSinkService() {
        clear();
      }

      public MediaSinkService clear() {
        availableType = ca.yyx.hu.aap.protocol.nano.Protocol.STREAM_TYPE_AUDIO;
        audioType = ca.yyx.hu.aap.protocol.nano.Protocol.AUDIO_TYPE_SPEECH;
        audioConfigs = ca.yyx.hu.aap.protocol.nano.Protocol.AudioConfiguration.emptyArray();
        videoConfigs = ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig.emptyArray();
        availableWhileInCall = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.availableType != ca.yyx.hu.aap.protocol.nano.Protocol.STREAM_TYPE_AUDIO) {
          output.writeInt32(1, this.availableType);
        }
        if (this.audioType != ca.yyx.hu.aap.protocol.nano.Protocol.AUDIO_TYPE_SPEECH) {
          output.writeInt32(2, this.audioType);
        }
        if (this.audioConfigs != null && this.audioConfigs.length > 0) {
          for (int i = 0; i < this.audioConfigs.length; i++) {
            ca.yyx.hu.aap.protocol.nano.Protocol.AudioConfiguration element = this.audioConfigs[i];
            if (element != null) {
              output.writeMessage(3, element);
            }
          }
        }
        if (this.videoConfigs != null && this.videoConfigs.length > 0) {
          for (int i = 0; i < this.videoConfigs.length; i++) {
            ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig element = this.videoConfigs[i];
            if (element != null) {
              output.writeMessage(4, element);
            }
          }
        }
        if (this.availableWhileInCall != false) {
          output.writeBool(5, this.availableWhileInCall);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.availableType != ca.yyx.hu.aap.protocol.nano.Protocol.STREAM_TYPE_AUDIO) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.availableType);
        }
        if (this.audioType != ca.yyx.hu.aap.protocol.nano.Protocol.AUDIO_TYPE_SPEECH) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.audioType);
        }
        if (this.audioConfigs != null && this.audioConfigs.length > 0) {
          for (int i = 0; i < this.audioConfigs.length; i++) {
            ca.yyx.hu.aap.protocol.nano.Protocol.AudioConfiguration element = this.audioConfigs[i];
            if (element != null) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(3, element);
            }
          }
        }
        if (this.videoConfigs != null && this.videoConfigs.length > 0) {
          for (int i = 0; i < this.videoConfigs.length; i++) {
            ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig element = this.videoConfigs[i];
            if (element != null) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(4, element);
            }
          }
        }
        if (this.availableWhileInCall != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(5, this.availableWhileInCall);
        }
        return size;
      }

      @Override
      public MediaSinkService mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int value = input.readInt32();
              switch (value) {
                case ca.yyx.hu.aap.protocol.nano.Protocol.STREAM_TYPE_AUDIO:
                case ca.yyx.hu.aap.protocol.nano.Protocol.STREAM_TYPE_VIDEO:
                  this.availableType = value;
                  break;
              }
              break;
            }
            case 16: {
              int value = input.readInt32();
              switch (value) {
                case ca.yyx.hu.aap.protocol.nano.Protocol.AUDIO_TYPE_SPEECH:
                case ca.yyx.hu.aap.protocol.nano.Protocol.AUDIO_TYPE_SYSTEM:
                case ca.yyx.hu.aap.protocol.nano.Protocol.AUDIO_TYPE_MEDIA:
                  this.audioType = value;
                  break;
              }
              break;
            }
            case 26: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 26);
              int i = this.audioConfigs == null ? 0 : this.audioConfigs.length;
              ca.yyx.hu.aap.protocol.nano.Protocol.AudioConfiguration[] newArray =
                  new ca.yyx.hu.aap.protocol.nano.Protocol.AudioConfiguration[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.audioConfigs, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.AudioConfiguration();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.AudioConfiguration();
              input.readMessage(newArray[i]);
              this.audioConfigs = newArray;
              break;
            }
            case 34: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 34);
              int i = this.videoConfigs == null ? 0 : this.videoConfigs.length;
              ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig[] newArray =
                  new ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.videoConfigs, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService.VideoConfig();
              input.readMessage(newArray[i]);
              this.videoConfigs = newArray;
              break;
            }
            case 40: {
              this.availableWhileInCall = input.readBool();
              break;
            }
          }
        }
      }

      public static MediaSinkService parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new MediaSinkService(), data);
      }

      public static MediaSinkService parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new MediaSinkService().mergeFrom(input);
      }
    }

    public static final class InputSourceService extends
        com.google.protobuf.nano.MessageNano {

      public static final class TouchConfig extends
          com.google.protobuf.nano.MessageNano {

        private static volatile TouchConfig[] _emptyArray;
        public static TouchConfig[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new TouchConfig[0];
              }
            }
          }
          return _emptyArray;
        }

        // required uint32 width = 1;
        public int width;

        // required uint32 height = 2;
        public int height;

        public TouchConfig() {
          clear();
        }

        public TouchConfig clear() {
          width = 0;
          height = 0;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          output.writeUInt32(1, this.width);
          output.writeUInt32(2, this.height);
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(1, this.width);
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(2, this.height);
          return size;
        }

        @Override
        public TouchConfig mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                this.width = input.readUInt32();
                break;
              }
              case 16: {
                this.height = input.readUInt32();
                break;
              }
            }
          }
        }

        public static TouchConfig parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new TouchConfig(), data);
        }

        public static TouchConfig parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new TouchConfig().mergeFrom(input);
        }
      }

      private static volatile InputSourceService[] _emptyArray;
      public static InputSourceService[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new InputSourceService[0];
            }
          }
        }
        return _emptyArray;
      }

      // repeated uint32 keycodes_supported = 1;
      public int[] keycodesSupported;

      // optional .ca.yyx.hu.aap.protocol.Service.InputSourceService.TouchConfig touchscreen = 2;
      public ca.yyx.hu.aap.protocol.nano.Protocol.Service.InputSourceService.TouchConfig touchscreen;

      // optional .ca.yyx.hu.aap.protocol.Service.InputSourceService.TouchConfig touchpad = 3;
      public ca.yyx.hu.aap.protocol.nano.Protocol.Service.InputSourceService.TouchConfig touchpad;

      public InputSourceService() {
        clear();
      }

      public InputSourceService clear() {
        keycodesSupported = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
        touchscreen = null;
        touchpad = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.keycodesSupported != null && this.keycodesSupported.length > 0) {
          for (int i = 0; i < this.keycodesSupported.length; i++) {
            output.writeUInt32(1, this.keycodesSupported[i]);
          }
        }
        if (this.touchscreen != null) {
          output.writeMessage(2, this.touchscreen);
        }
        if (this.touchpad != null) {
          output.writeMessage(3, this.touchpad);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.keycodesSupported != null && this.keycodesSupported.length > 0) {
          int dataSize = 0;
          for (int i = 0; i < this.keycodesSupported.length; i++) {
            int element = this.keycodesSupported[i];
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeUInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * this.keycodesSupported.length;
        }
        if (this.touchscreen != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(2, this.touchscreen);
        }
        if (this.touchpad != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(3, this.touchpad);
        }
        return size;
      }

      @Override
      public InputSourceService mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 8);
              int i = this.keycodesSupported == null ? 0 : this.keycodesSupported.length;
              int[] newArray = new int[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.keycodesSupported, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readUInt32();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readUInt32();
              this.keycodesSupported = newArray;
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              // First pass to compute array length.
              int arrayLength = 0;
              int startPos = input.getPosition();
              while (input.getBytesUntilLimit() > 0) {
                input.readUInt32();
                arrayLength++;
              }
              input.rewindToPosition(startPos);
              int i = this.keycodesSupported == null ? 0 : this.keycodesSupported.length;
              int[] newArray = new int[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.keycodesSupported, 0, newArray, 0, i);
              }
              for (; i < newArray.length; i++) {
                newArray[i] = input.readUInt32();
              }
              this.keycodesSupported = newArray;
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (this.touchscreen == null) {
                this.touchscreen = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.InputSourceService.TouchConfig();
              }
              input.readMessage(this.touchscreen);
              break;
            }
            case 26: {
              if (this.touchpad == null) {
                this.touchpad = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.InputSourceService.TouchConfig();
              }
              input.readMessage(this.touchpad);
              break;
            }
          }
        }
      }

      public static InputSourceService parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new InputSourceService(), data);
      }

      public static InputSourceService parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new InputSourceService().mergeFrom(input);
      }
    }

    public static final class MediaSourceService extends
        com.google.protobuf.nano.MessageNano {

      private static volatile MediaSourceService[] _emptyArray;
      public static MediaSourceService[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new MediaSourceService[0];
            }
          }
        }
        return _emptyArray;
      }

      // required .ca.yyx.hu.aap.protocol.STREAM_TYPE type = 1;
      public int type;

      // required .ca.yyx.hu.aap.protocol.AudioConfiguration audio_config = 2;
      public ca.yyx.hu.aap.protocol.nano.Protocol.AudioConfiguration audioConfig;

      // optional bool available_while_in_call = 3;
      public boolean availableWhileInCall;

      public MediaSourceService() {
        clear();
      }

      public MediaSourceService clear() {
        type = ca.yyx.hu.aap.protocol.nano.Protocol.STREAM_TYPE_AUDIO;
        audioConfig = null;
        availableWhileInCall = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeInt32(1, this.type);
        if (this.audioConfig != null) {
          output.writeMessage(2, this.audioConfig);
        }
        if (this.availableWhileInCall != false) {
          output.writeBool(3, this.availableWhileInCall);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
        if (this.audioConfig != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(2, this.audioConfig);
        }
        if (this.availableWhileInCall != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(3, this.availableWhileInCall);
        }
        return size;
      }

      @Override
      public MediaSourceService mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int value = input.readInt32();
              switch (value) {
                case ca.yyx.hu.aap.protocol.nano.Protocol.STREAM_TYPE_AUDIO:
                case ca.yyx.hu.aap.protocol.nano.Protocol.STREAM_TYPE_VIDEO:
                  this.type = value;
                  break;
              }
              break;
            }
            case 18: {
              if (this.audioConfig == null) {
                this.audioConfig = new ca.yyx.hu.aap.protocol.nano.Protocol.AudioConfiguration();
              }
              input.readMessage(this.audioConfig);
              break;
            }
            case 24: {
              this.availableWhileInCall = input.readBool();
              break;
            }
          }
        }
      }

      public static MediaSourceService parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new MediaSourceService(), data);
      }

      public static MediaSourceService parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new MediaSourceService().mergeFrom(input);
      }
    }

    public static final class BluetoothService extends
        com.google.protobuf.nano.MessageNano {

      private static volatile BluetoothService[] _emptyArray;
      public static BluetoothService[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new BluetoothService[0];
            }
          }
        }
        return _emptyArray;
      }

      // required string car_address = 1;
      public java.lang.String carAddress;

      // repeated .ca.yyx.hu.aap.protocol.BLUETOOTH_PARING_METHOD supported_pairing_methods = 2;
      public int[] supportedPairingMethods;

      public BluetoothService() {
        clear();
      }

      public BluetoothService clear() {
        carAddress = "";
        supportedPairingMethods = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeString(1, this.carAddress);
        if (this.supportedPairingMethods != null && this.supportedPairingMethods.length > 0) {
          for (int i = 0; i < this.supportedPairingMethods.length; i++) {
            output.writeInt32(2, this.supportedPairingMethods[i]);
          }
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.carAddress);
        if (this.supportedPairingMethods != null && this.supportedPairingMethods.length > 0) {
          int dataSize = 0;
          for (int i = 0; i < this.supportedPairingMethods.length; i++) {
            int element = this.supportedPairingMethods[i];
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * this.supportedPairingMethods.length;
        }
        return size;
      }

      @Override
      public BluetoothService mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.carAddress = input.readString();
              break;
            }
            case 16: {
              int length = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 16);
              int[] validValues = new int[length];
              int validCount = 0;
              for (int i = 0; i < length; i++) {
                if (i != 0) { // tag for first value already consumed.
                  input.readTag();
                }
                int value = input.readInt32();
                switch (value) {
                  case ca.yyx.hu.aap.protocol.nano.Protocol.BLUETOOTH_PARING_METHOD_2:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.BLUETOOTH_PARING_METHOD_3:
                    validValues[validCount++] = value;
                    break;
                }
              }
              if (validCount != 0) {
                int i = this.supportedPairingMethods == null ? 0 : this.supportedPairingMethods.length;
                if (i == 0 && validCount == validValues.length) {
                  this.supportedPairingMethods = validValues;
                } else {
                  int[] newArray = new int[i + validCount];
                  if (i != 0) {
                    java.lang.System.arraycopy(this.supportedPairingMethods, 0, newArray, 0, i);
                  }
                  java.lang.System.arraycopy(validValues, 0, newArray, i, validCount);
                  this.supportedPairingMethods = newArray;
                }
              }
              break;
            }
            case 18: {
              int bytes = input.readRawVarint32();
              int limit = input.pushLimit(bytes);
              // First pass to compute array length.
              int arrayLength = 0;
              int startPos = input.getPosition();
              while (input.getBytesUntilLimit() > 0) {
                switch (input.readInt32()) {
                  case ca.yyx.hu.aap.protocol.nano.Protocol.BLUETOOTH_PARING_METHOD_2:
                  case ca.yyx.hu.aap.protocol.nano.Protocol.BLUETOOTH_PARING_METHOD_3:
                    arrayLength++;
                    break;
                }
              }
              if (arrayLength != 0) {
                input.rewindToPosition(startPos);
                int i = this.supportedPairingMethods == null ? 0 : this.supportedPairingMethods.length;
                int[] newArray = new int[i + arrayLength];
                if (i != 0) {
                  java.lang.System.arraycopy(this.supportedPairingMethods, 0, newArray, 0, i);
                }
                while (input.getBytesUntilLimit() > 0) {
                  int value = input.readInt32();
                  switch (value) {
                    case ca.yyx.hu.aap.protocol.nano.Protocol.BLUETOOTH_PARING_METHOD_2:
                    case ca.yyx.hu.aap.protocol.nano.Protocol.BLUETOOTH_PARING_METHOD_3:
                      newArray[i++] = value;
                      break;
                  }
                }
                this.supportedPairingMethods = newArray;
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }

      public static BluetoothService parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new BluetoothService(), data);
      }

      public static BluetoothService parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new BluetoothService().mergeFrom(input);
      }
    }

    private static volatile Service[] _emptyArray;
    public static Service[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Service[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 id = 1;
    public int id;

    // optional .ca.yyx.hu.aap.protocol.Service.SensorSourceService sensor_source_service = 2;
    public ca.yyx.hu.aap.protocol.nano.Protocol.Service.SensorSourceService sensorSourceService;

    // optional .ca.yyx.hu.aap.protocol.Service.MediaSinkService media_sink_service = 3;
    public ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService mediaSinkService;

    // optional .ca.yyx.hu.aap.protocol.Service.InputSourceService input_source_service = 4;
    public ca.yyx.hu.aap.protocol.nano.Protocol.Service.InputSourceService inputSourceService;

    // optional .ca.yyx.hu.aap.protocol.Service.MediaSourceService media_source_service = 5;
    public ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSourceService mediaSourceService;

    // optional .ca.yyx.hu.aap.protocol.Service.BluetoothService bluetooth_service = 6;
    public ca.yyx.hu.aap.protocol.nano.Protocol.Service.BluetoothService bluetoothService;

    public Service() {
      clear();
    }

    public Service clear() {
      id = 0;
      sensorSourceService = null;
      mediaSinkService = null;
      inputSourceService = null;
      mediaSourceService = null;
      bluetoothService = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0) {
        output.writeUInt32(1, this.id);
      }
      if (this.sensorSourceService != null) {
        output.writeMessage(2, this.sensorSourceService);
      }
      if (this.mediaSinkService != null) {
        output.writeMessage(3, this.mediaSinkService);
      }
      if (this.inputSourceService != null) {
        output.writeMessage(4, this.inputSourceService);
      }
      if (this.mediaSourceService != null) {
        output.writeMessage(5, this.mediaSourceService);
      }
      if (this.bluetoothService != null) {
        output.writeMessage(6, this.bluetoothService);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.id);
      }
      if (this.sensorSourceService != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.sensorSourceService);
      }
      if (this.mediaSinkService != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.mediaSinkService);
      }
      if (this.inputSourceService != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.inputSourceService);
      }
      if (this.mediaSourceService != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.mediaSourceService);
      }
      if (this.bluetoothService != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(6, this.bluetoothService);
      }
      return size;
    }

    @Override
    public Service mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readUInt32();
            break;
          }
          case 18: {
            if (this.sensorSourceService == null) {
              this.sensorSourceService = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.SensorSourceService();
            }
            input.readMessage(this.sensorSourceService);
            break;
          }
          case 26: {
            if (this.mediaSinkService == null) {
              this.mediaSinkService = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSinkService();
            }
            input.readMessage(this.mediaSinkService);
            break;
          }
          case 34: {
            if (this.inputSourceService == null) {
              this.inputSourceService = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.InputSourceService();
            }
            input.readMessage(this.inputSourceService);
            break;
          }
          case 42: {
            if (this.mediaSourceService == null) {
              this.mediaSourceService = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.MediaSourceService();
            }
            input.readMessage(this.mediaSourceService);
            break;
          }
          case 50: {
            if (this.bluetoothService == null) {
              this.bluetoothService = new ca.yyx.hu.aap.protocol.nano.Protocol.Service.BluetoothService();
            }
            input.readMessage(this.bluetoothService);
            break;
          }
        }
      }
    }

    public static Service parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Service(), data);
    }

    public static Service parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Service().mergeFrom(input);
    }
  }

  public static final class ServiceDiscoveryRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ServiceDiscoveryRequest[] _emptyArray;
    public static ServiceDiscoveryRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ServiceDiscoveryRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string phone_name = 4;
    public java.lang.String phoneName;

    public ServiceDiscoveryRequest() {
      clear();
    }

    public ServiceDiscoveryRequest clear() {
      phoneName = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.phoneName.equals("")) {
        output.writeString(4, this.phoneName);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.phoneName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.phoneName);
      }
      return size;
    }

    @Override
    public ServiceDiscoveryRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 34: {
            this.phoneName = input.readString();
            break;
          }
        }
      }
    }

    public static ServiceDiscoveryRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ServiceDiscoveryRequest(), data);
    }

    public static ServiceDiscoveryRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ServiceDiscoveryRequest().mergeFrom(input);
    }
  }

  public static final class ServiceDiscoveryResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ServiceDiscoveryResponse[] _emptyArray;
    public static ServiceDiscoveryResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ServiceDiscoveryResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .ca.yyx.hu.aap.protocol.Service services = 1;
    public ca.yyx.hu.aap.protocol.nano.Protocol.Service[] services;

    // optional string make = 2;
    public java.lang.String make;

    // optional string model = 3;
    public java.lang.String model;

    // optional string year = 4;
    public java.lang.String year;

    // optional string vehicle_id = 5;
    public java.lang.String vehicleId;

    // optional bool driver_position = 6;
    public boolean driverPosition;

    // optional string head_unit_make = 7;
    public java.lang.String headUnitMake;

    // optional string head_unit_model = 8;
    public java.lang.String headUnitModel;

    // optional string head_unit_software_build = 9;
    public java.lang.String headUnitSoftwareBuild;

    // optional string head_unit_software_version = 10;
    public java.lang.String headUnitSoftwareVersion;

    // optional bool can_play_native_media_during_vr = 11;
    public boolean canPlayNativeMediaDuringVr;

    // optional bool hide_projected_clock = 12;
    public boolean hideProjectedClock;

    public ServiceDiscoveryResponse() {
      clear();
    }

    public ServiceDiscoveryResponse clear() {
      services = ca.yyx.hu.aap.protocol.nano.Protocol.Service.emptyArray();
      make = "";
      model = "";
      year = "";
      vehicleId = "";
      driverPosition = false;
      headUnitMake = "";
      headUnitModel = "";
      headUnitSoftwareBuild = "";
      headUnitSoftwareVersion = "";
      canPlayNativeMediaDuringVr = false;
      hideProjectedClock = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.services != null && this.services.length > 0) {
        for (int i = 0; i < this.services.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.Service element = this.services[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (!this.make.equals("")) {
        output.writeString(2, this.make);
      }
      if (!this.model.equals("")) {
        output.writeString(3, this.model);
      }
      if (!this.year.equals("")) {
        output.writeString(4, this.year);
      }
      if (!this.vehicleId.equals("")) {
        output.writeString(5, this.vehicleId);
      }
      if (this.driverPosition != false) {
        output.writeBool(6, this.driverPosition);
      }
      if (!this.headUnitMake.equals("")) {
        output.writeString(7, this.headUnitMake);
      }
      if (!this.headUnitModel.equals("")) {
        output.writeString(8, this.headUnitModel);
      }
      if (!this.headUnitSoftwareBuild.equals("")) {
        output.writeString(9, this.headUnitSoftwareBuild);
      }
      if (!this.headUnitSoftwareVersion.equals("")) {
        output.writeString(10, this.headUnitSoftwareVersion);
      }
      if (this.canPlayNativeMediaDuringVr != false) {
        output.writeBool(11, this.canPlayNativeMediaDuringVr);
      }
      if (this.hideProjectedClock != false) {
        output.writeBool(12, this.hideProjectedClock);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.services != null && this.services.length > 0) {
        for (int i = 0; i < this.services.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Protocol.Service element = this.services[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (!this.make.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.make);
      }
      if (!this.model.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.model);
      }
      if (!this.year.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.year);
      }
      if (!this.vehicleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.vehicleId);
      }
      if (this.driverPosition != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(6, this.driverPosition);
      }
      if (!this.headUnitMake.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.headUnitMake);
      }
      if (!this.headUnitModel.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.headUnitModel);
      }
      if (!this.headUnitSoftwareBuild.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.headUnitSoftwareBuild);
      }
      if (!this.headUnitSoftwareVersion.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(10, this.headUnitSoftwareVersion);
      }
      if (this.canPlayNativeMediaDuringVr != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(11, this.canPlayNativeMediaDuringVr);
      }
      if (this.hideProjectedClock != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(12, this.hideProjectedClock);
      }
      return size;
    }

    @Override
    public ServiceDiscoveryResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.services == null ? 0 : this.services.length;
            ca.yyx.hu.aap.protocol.nano.Protocol.Service[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Protocol.Service[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.services, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.Service();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Protocol.Service();
            input.readMessage(newArray[i]);
            this.services = newArray;
            break;
          }
          case 18: {
            this.make = input.readString();
            break;
          }
          case 26: {
            this.model = input.readString();
            break;
          }
          case 34: {
            this.year = input.readString();
            break;
          }
          case 42: {
            this.vehicleId = input.readString();
            break;
          }
          case 48: {
            this.driverPosition = input.readBool();
            break;
          }
          case 58: {
            this.headUnitMake = input.readString();
            break;
          }
          case 66: {
            this.headUnitModel = input.readString();
            break;
          }
          case 74: {
            this.headUnitSoftwareBuild = input.readString();
            break;
          }
          case 82: {
            this.headUnitSoftwareVersion = input.readString();
            break;
          }
          case 88: {
            this.canPlayNativeMediaDuringVr = input.readBool();
            break;
          }
          case 96: {
            this.hideProjectedClock = input.readBool();
            break;
          }
        }
      }
    }

    public static ServiceDiscoveryResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ServiceDiscoveryResponse(), data);
    }

    public static ServiceDiscoveryResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ServiceDiscoveryResponse().mergeFrom(input);
    }
  }

  public static final class ChannelOpenRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ChannelOpenRequest[] _emptyArray;
    public static ChannelOpenRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ChannelOpenRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 priority = 1;
    public int priority;

    // optional int32 service_id = 2;
    public int serviceId;

    public ChannelOpenRequest() {
      clear();
    }

    public ChannelOpenRequest clear() {
      priority = 0;
      serviceId = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.priority != 0) {
        output.writeInt32(1, this.priority);
      }
      if (this.serviceId != 0) {
        output.writeInt32(2, this.serviceId);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.priority != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.priority);
      }
      if (this.serviceId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.serviceId);
      }
      return size;
    }

    @Override
    public ChannelOpenRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.priority = input.readInt32();
            break;
          }
          case 16: {
            this.serviceId = input.readInt32();
            break;
          }
        }
      }
    }

    public static ChannelOpenRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ChannelOpenRequest(), data);
    }

    public static ChannelOpenRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ChannelOpenRequest().mergeFrom(input);
    }
  }

  public static final class ChannelOpenResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ChannelOpenResponse[] _emptyArray;
    public static ChannelOpenResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ChannelOpenResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .ca.yyx.hu.aap.protocol.MessageStatus status = 1;
    public int status;

    public ChannelOpenResponse() {
      clear();
    }

    public ChannelOpenResponse clear() {
      status = ca.yyx.hu.aap.protocol.nano.Protocol.STATUS_OK;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.status);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.status);
      return size;
    }

    @Override
    public ChannelOpenResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.STATUS_OK:
                this.status = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static ChannelOpenResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ChannelOpenResponse(), data);
    }

    public static ChannelOpenResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ChannelOpenResponse().mergeFrom(input);
    }
  }

  public static final class PingRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PingRequest[] _emptyArray;
    public static PingRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PingRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int64 timestamp = 1;
    public long timestamp;

    public PingRequest() {
      clear();
    }

    public PingRequest clear() {
      timestamp = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt64(1, this.timestamp);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt64Size(1, this.timestamp);
      return size;
    }

    @Override
    public PingRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.timestamp = input.readInt64();
            break;
          }
        }
      }
    }

    public static PingRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PingRequest(), data);
    }

    public static PingRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PingRequest().mergeFrom(input);
    }
  }

  public static final class PingResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PingResponse[] _emptyArray;
    public static PingResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PingResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int64 timestamp = 1;
    public long timestamp;

    public PingResponse() {
      clear();
    }

    public PingResponse clear() {
      timestamp = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt64(1, this.timestamp);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt64Size(1, this.timestamp);
      return size;
    }

    @Override
    public PingResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.timestamp = input.readInt64();
            break;
          }
        }
      }
    }

    public static PingResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PingResponse(), data);
    }

    public static PingResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PingResponse().mergeFrom(input);
    }
  }

  public static final class ShutdownRequest extends
      com.google.protobuf.nano.MessageNano {

    // enum REASON
    public static final int REASON_QUIT = 1;

    private static volatile ShutdownRequest[] _emptyArray;
    public static ShutdownRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ShutdownRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .ca.yyx.hu.aap.protocol.ShutdownRequest.REASON reason = 1;
    public int reason;

    public ShutdownRequest() {
      clear();
    }

    public ShutdownRequest clear() {
      reason = ca.yyx.hu.aap.protocol.nano.Protocol.ShutdownRequest.REASON_QUIT;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.reason != ca.yyx.hu.aap.protocol.nano.Protocol.ShutdownRequest.REASON_QUIT) {
        output.writeInt32(1, this.reason);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.reason != ca.yyx.hu.aap.protocol.nano.Protocol.ShutdownRequest.REASON_QUIT) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.reason);
      }
      return size;
    }

    @Override
    public ShutdownRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.ShutdownRequest.REASON_QUIT:
                this.reason = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static ShutdownRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ShutdownRequest(), data);
    }

    public static ShutdownRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ShutdownRequest().mergeFrom(input);
    }
  }

  public static final class ShutdownResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ShutdownResponse[] _emptyArray;
    public static ShutdownResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ShutdownResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    public ShutdownResponse() {
      clear();
    }

    public ShutdownResponse clear() {
      cachedSize = -1;
      return this;
    }

    @Override
    public ShutdownResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }

    public static ShutdownResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ShutdownResponse(), data);
    }

    public static ShutdownResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ShutdownResponse().mergeFrom(input);
    }
  }

  public static final class MediaSetupRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile MediaSetupRequest[] _emptyArray;
    public static MediaSetupRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MediaSetupRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 type = 1;
    public int type;

    public MediaSetupRequest() {
      clear();
    }

    public MediaSetupRequest clear() {
      type = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != 0) {
        output.writeUInt32(1, this.type);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.type);
      }
      return size;
    }

    @Override
    public MediaSetupRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.type = input.readUInt32();
            break;
          }
        }
      }
    }

    public static MediaSetupRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MediaSetupRequest(), data);
    }

    public static MediaSetupRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MediaSetupRequest().mergeFrom(input);
    }
  }

  public static final class MediaSetupResponse extends
      com.google.protobuf.nano.MessageNano {

    // enum MEDIA_STATUS
    public static final int MEDIA_STATUS_1 = 1;
    public static final int MEDIA_STATUS_2 = 2;

    private static volatile MediaSetupResponse[] _emptyArray;
    public static MediaSetupResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MediaSetupResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .ca.yyx.hu.aap.protocol.MediaSetupResponse.MEDIA_STATUS media_status = 1;
    public int mediaStatus;

    // required uint32 max_unacked = 2;
    public int maxUnacked;

    // repeated uint32 configs = 3;
    public int[] configs;

    public MediaSetupResponse() {
      clear();
    }

    public MediaSetupResponse clear() {
      mediaStatus = ca.yyx.hu.aap.protocol.nano.Protocol.MediaSetupResponse.MEDIA_STATUS_1;
      maxUnacked = 0;
      configs = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.mediaStatus);
      output.writeUInt32(2, this.maxUnacked);
      if (this.configs != null && this.configs.length > 0) {
        for (int i = 0; i < this.configs.length; i++) {
          output.writeUInt32(3, this.configs[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.mediaStatus);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(2, this.maxUnacked);
      if (this.configs != null && this.configs.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.configs.length; i++) {
          int element = this.configs[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.configs.length;
      }
      return size;
    }

    @Override
    public MediaSetupResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.MediaSetupResponse.MEDIA_STATUS_1:
              case ca.yyx.hu.aap.protocol.nano.Protocol.MediaSetupResponse.MEDIA_STATUS_2:
                this.mediaStatus = value;
                break;
            }
            break;
          }
          case 16: {
            this.maxUnacked = input.readUInt32();
            break;
          }
          case 24: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 24);
            int i = this.configs == null ? 0 : this.configs.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.configs, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt32();
            this.configs = newArray;
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.configs == null ? 0 : this.configs.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.configs, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt32();
            }
            this.configs = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static MediaSetupResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MediaSetupResponse(), data);
    }

    public static MediaSetupResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MediaSetupResponse().mergeFrom(input);
    }
  }

  public static final class MediaStopRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile MediaStopRequest[] _emptyArray;
    public static MediaStopRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MediaStopRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    public MediaStopRequest() {
      clear();
    }

    public MediaStopRequest clear() {
      cachedSize = -1;
      return this;
    }

    @Override
    public MediaStopRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }

    public static MediaStopRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MediaStopRequest(), data);
    }

    public static MediaStopRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MediaStopRequest().mergeFrom(input);
    }
  }

  public static final class MediaStartRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile MediaStartRequest[] _emptyArray;
    public static MediaStartRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MediaStartRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 session = 1;
    public int session;

    // optional uint32 config = 2;
    public int config;

    public MediaStartRequest() {
      clear();
    }

    public MediaStartRequest clear() {
      session = 0;
      config = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.session);
      if (this.config != 0) {
        output.writeUInt32(2, this.config);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.session);
      if (this.config != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.config);
      }
      return size;
    }

    @Override
    public MediaStartRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.session = input.readInt32();
            break;
          }
          case 16: {
            this.config = input.readUInt32();
            break;
          }
        }
      }
    }

    public static MediaStartRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MediaStartRequest(), data);
    }

    public static MediaStartRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MediaStartRequest().mergeFrom(input);
    }
  }

  public static final class MediaAck extends
      com.google.protobuf.nano.MessageNano {

    private static volatile MediaAck[] _emptyArray;
    public static MediaAck[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MediaAck[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 session = 1;
    public int session;

    // required uint32 value = 2;
    public int value;

    public MediaAck() {
      clear();
    }

    public MediaAck clear() {
      session = 0;
      value = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.session);
      output.writeUInt32(2, this.value);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.session);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(2, this.value);
      return size;
    }

    @Override
    public MediaAck mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.session = input.readInt32();
            break;
          }
          case 16: {
            this.value = input.readUInt32();
            break;
          }
        }
      }
    }

    public static MediaAck parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MediaAck(), data);
    }

    public static MediaAck parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MediaAck().mergeFrom(input);
    }
  }

  public static final class MicRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile MicRequest[] _emptyArray;
    public static MicRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MicRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // required bool open = 1;
    public boolean open;

    // optional bool anc = 2;
    public boolean anc;

    // optional bool ec = 3;
    public boolean ec;

    // required int32 max_unacked = 4;
    public int maxUnacked;

    public MicRequest() {
      clear();
    }

    public MicRequest clear() {
      open = false;
      anc = false;
      ec = false;
      maxUnacked = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeBool(1, this.open);
      if (this.anc != false) {
        output.writeBool(2, this.anc);
      }
      if (this.ec != false) {
        output.writeBool(3, this.ec);
      }
      output.writeInt32(4, this.maxUnacked);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(1, this.open);
      if (this.anc != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.anc);
      }
      if (this.ec != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(3, this.ec);
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(4, this.maxUnacked);
      return size;
    }

    @Override
    public MicRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.open = input.readBool();
            break;
          }
          case 16: {
            this.anc = input.readBool();
            break;
          }
          case 24: {
            this.ec = input.readBool();
            break;
          }
          case 32: {
            this.maxUnacked = input.readInt32();
            break;
          }
        }
      }
    }

    public static MicRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MicRequest(), data);
    }

    public static MicRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MicRequest().mergeFrom(input);
    }
  }

  public static final class MicResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile MicResponse[] _emptyArray;
    public static MicResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MicResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 session = 1;
    public int session;

    // required uint32 value = 2;
    public int value;

    public MicResponse() {
      clear();
    }

    public MicResponse clear() {
      session = 0;
      value = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.session);
      output.writeUInt32(2, this.value);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.session);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(2, this.value);
      return size;
    }

    @Override
    public MicResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.session = input.readInt32();
            break;
          }
          case 16: {
            this.value = input.readUInt32();
            break;
          }
        }
      }
    }

    public static MicResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MicResponse(), data);
    }

    public static MicResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MicResponse().mergeFrom(input);
    }
  }

  public static final class VideoFocusRequestNotification extends
      com.google.protobuf.nano.MessageNano {

    // enum VideoFocusReason
    public static final int VIDEO_FOCUS_REASON_1 = 1;
    public static final int VIDEO_FOCUS_REASON_2 = 2;

    private static volatile VideoFocusRequestNotification[] _emptyArray;
    public static VideoFocusRequestNotification[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VideoFocusRequestNotification[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 disp_channel_id = 1;
    public int dispChannelId;

    // optional .ca.yyx.hu.aap.protocol.VideoFocusMode mode = 2;
    public int mode;

    // optional .ca.yyx.hu.aap.protocol.VideoFocusRequestNotification.VideoFocusReason reason = 3;
    public int reason;

    public VideoFocusRequestNotification() {
      clear();
    }

    public VideoFocusRequestNotification clear() {
      dispChannelId = 0;
      mode = ca.yyx.hu.aap.protocol.nano.Protocol.VIDEO_FOCUS_MODE_1;
      reason = ca.yyx.hu.aap.protocol.nano.Protocol.VideoFocusRequestNotification.VIDEO_FOCUS_REASON_1;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.dispChannelId != 0) {
        output.writeInt32(1, this.dispChannelId);
      }
      if (this.mode != ca.yyx.hu.aap.protocol.nano.Protocol.VIDEO_FOCUS_MODE_1) {
        output.writeInt32(2, this.mode);
      }
      if (this.reason != ca.yyx.hu.aap.protocol.nano.Protocol.VideoFocusRequestNotification.VIDEO_FOCUS_REASON_1) {
        output.writeInt32(3, this.reason);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.dispChannelId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.dispChannelId);
      }
      if (this.mode != ca.yyx.hu.aap.protocol.nano.Protocol.VIDEO_FOCUS_MODE_1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.mode);
      }
      if (this.reason != ca.yyx.hu.aap.protocol.nano.Protocol.VideoFocusRequestNotification.VIDEO_FOCUS_REASON_1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.reason);
      }
      return size;
    }

    @Override
    public VideoFocusRequestNotification mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.dispChannelId = input.readInt32();
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.VIDEO_FOCUS_MODE_1:
              case ca.yyx.hu.aap.protocol.nano.Protocol.VIDEO_FOCUS_MODE_2:
                this.mode = value;
                break;
            }
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.VideoFocusRequestNotification.VIDEO_FOCUS_REASON_1:
              case ca.yyx.hu.aap.protocol.nano.Protocol.VideoFocusRequestNotification.VIDEO_FOCUS_REASON_2:
                this.reason = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static VideoFocusRequestNotification parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VideoFocusRequestNotification(), data);
    }

    public static VideoFocusRequestNotification parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VideoFocusRequestNotification().mergeFrom(input);
    }
  }

  public static final class VideoFocusNotification extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VideoFocusNotification[] _emptyArray;
    public static VideoFocusNotification[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VideoFocusNotification[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .ca.yyx.hu.aap.protocol.VideoFocusMode mode = 1;
    public int mode;

    // optional bool unsolicited = 2;
    public boolean unsolicited;

    public VideoFocusNotification() {
      clear();
    }

    public VideoFocusNotification clear() {
      mode = ca.yyx.hu.aap.protocol.nano.Protocol.VIDEO_FOCUS_MODE_1;
      unsolicited = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.mode != ca.yyx.hu.aap.protocol.nano.Protocol.VIDEO_FOCUS_MODE_1) {
        output.writeInt32(1, this.mode);
      }
      if (this.unsolicited != false) {
        output.writeBool(2, this.unsolicited);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.mode != ca.yyx.hu.aap.protocol.nano.Protocol.VIDEO_FOCUS_MODE_1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.mode);
      }
      if (this.unsolicited != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.unsolicited);
      }
      return size;
    }

    @Override
    public VideoFocusNotification mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.VIDEO_FOCUS_MODE_1:
              case ca.yyx.hu.aap.protocol.nano.Protocol.VIDEO_FOCUS_MODE_2:
                this.mode = value;
                break;
            }
            break;
          }
          case 16: {
            this.unsolicited = input.readBool();
            break;
          }
        }
      }
    }

    public static VideoFocusNotification parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VideoFocusNotification(), data);
    }

    public static VideoFocusNotification parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VideoFocusNotification().mergeFrom(input);
    }
  }

  public static final class SensorRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile SensorRequest[] _emptyArray;
    public static SensorRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SensorRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .ca.yyx.hu.aap.protocol.SensorType type = 1;
    public int type;

    // optional int64 min_update_period = 2;
    public long minUpdatePeriod;

    public SensorRequest() {
      clear();
    }

    public SensorRequest clear() {
      type = ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_DRIVING_STATUS;
      minUpdatePeriod = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_DRIVING_STATUS) {
        output.writeInt32(1, this.type);
      }
      if (this.minUpdatePeriod != 0L) {
        output.writeInt64(2, this.minUpdatePeriod);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_DRIVING_STATUS) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      }
      if (this.minUpdatePeriod != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.minUpdatePeriod);
      }
      return size;
    }

    @Override
    public SensorRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_DRIVING_STATUS:
              case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_NIGHT_DATA:
              case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_RPM:
              case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_DIAGNOSTICS:
              case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_GEAR:
              case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_COMPASS:
              case ca.yyx.hu.aap.protocol.nano.Protocol.SENSOR_TYPE_LOCATION:
                this.type = value;
                break;
            }
            break;
          }
          case 16: {
            this.minUpdatePeriod = input.readInt64();
            break;
          }
        }
      }
    }

    public static SensorRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SensorRequest(), data);
    }

    public static SensorRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SensorRequest().mergeFrom(input);
    }
  }

  public static final class SensorResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile SensorResponse[] _emptyArray;
    public static SensorResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SensorResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .ca.yyx.hu.aap.protocol.MessageStatus status = 1;
    public int status;

    public SensorResponse() {
      clear();
    }

    public SensorResponse clear() {
      status = ca.yyx.hu.aap.protocol.nano.Protocol.STATUS_OK;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.status);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.status);
      return size;
    }

    @Override
    public SensorResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.STATUS_OK:
                this.status = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static SensorResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SensorResponse(), data);
    }

    public static SensorResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SensorResponse().mergeFrom(input);
    }
  }

  public static final class NavigationFocusRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile NavigationFocusRequest[] _emptyArray;
    public static NavigationFocusRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new NavigationFocusRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 focus_type = 1;
    public int focusType;

    public NavigationFocusRequest() {
      clear();
    }

    public NavigationFocusRequest clear() {
      focusType = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.focusType != 0) {
        output.writeUInt32(1, this.focusType);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.focusType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.focusType);
      }
      return size;
    }

    @Override
    public NavigationFocusRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.focusType = input.readUInt32();
            break;
          }
        }
      }
    }

    public static NavigationFocusRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new NavigationFocusRequest(), data);
    }

    public static NavigationFocusRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new NavigationFocusRequest().mergeFrom(input);
    }
  }

  public static final class NavigationFocusResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile NavigationFocusResponse[] _emptyArray;
    public static NavigationFocusResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new NavigationFocusResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 focus_type = 1;
    public int focusType;

    public NavigationFocusResponse() {
      clear();
    }

    public NavigationFocusResponse clear() {
      focusType = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.focusType != 0) {
        output.writeUInt32(1, this.focusType);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.focusType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.focusType);
      }
      return size;
    }

    @Override
    public NavigationFocusResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.focusType = input.readUInt32();
            break;
          }
        }
      }
    }

    public static NavigationFocusResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new NavigationFocusResponse(), data);
    }

    public static NavigationFocusResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new NavigationFocusResponse().mergeFrom(input);
    }
  }

  public static final class VoiceSessionNotification extends
      com.google.protobuf.nano.MessageNano {

    // enum VoiceSessionStatus
    public static final int VOICE_STATUS_START = 1;
    public static final int VOICE_STATUS_STOP = 2;

    private static volatile VoiceSessionNotification[] _emptyArray;
    public static VoiceSessionNotification[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VoiceSessionNotification[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .ca.yyx.hu.aap.protocol.VoiceSessionNotification.VoiceSessionStatus status = 1;
    public int status;

    public VoiceSessionNotification() {
      clear();
    }

    public VoiceSessionNotification clear() {
      status = ca.yyx.hu.aap.protocol.nano.Protocol.VoiceSessionNotification.VOICE_STATUS_START;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.status != ca.yyx.hu.aap.protocol.nano.Protocol.VoiceSessionNotification.VOICE_STATUS_START) {
        output.writeInt32(1, this.status);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.status != ca.yyx.hu.aap.protocol.nano.Protocol.VoiceSessionNotification.VOICE_STATUS_START) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.status);
      }
      return size;
    }

    @Override
    public VoiceSessionNotification mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.VoiceSessionNotification.VOICE_STATUS_START:
              case ca.yyx.hu.aap.protocol.nano.Protocol.VoiceSessionNotification.VOICE_STATUS_STOP:
                this.status = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static VoiceSessionNotification parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VoiceSessionNotification(), data);
    }

    public static VoiceSessionNotification parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VoiceSessionNotification().mergeFrom(input);
    }
  }

  public static final class AudioFocusRequestNotification extends
      com.google.protobuf.nano.MessageNano {

    // enum AudioFocusRequestType
    public static final int AUDIO_FOCUS_GAIN = 1;
    public static final int AUDIO_FOCUS_GAIN_TRANSIENT = 2;
    public static final int AUDIO_FOCUS_UNKNOWN = 3;
    public static final int AUDIO_FOCUS_RELEASE = 4;

    private static volatile AudioFocusRequestNotification[] _emptyArray;
    public static AudioFocusRequestNotification[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AudioFocusRequestNotification[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .ca.yyx.hu.aap.protocol.AudioFocusRequestNotification.AudioFocusRequestType request = 1;
    public int request;

    public AudioFocusRequestNotification() {
      clear();
    }

    public AudioFocusRequestNotification clear() {
      request = ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusRequestNotification.AUDIO_FOCUS_GAIN;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.request != ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusRequestNotification.AUDIO_FOCUS_GAIN) {
        output.writeInt32(1, this.request);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.request != ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusRequestNotification.AUDIO_FOCUS_GAIN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.request);
      }
      return size;
    }

    @Override
    public AudioFocusRequestNotification mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusRequestNotification.AUDIO_FOCUS_GAIN:
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusRequestNotification.AUDIO_FOCUS_GAIN_TRANSIENT:
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusRequestNotification.AUDIO_FOCUS_UNKNOWN:
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusRequestNotification.AUDIO_FOCUS_RELEASE:
                this.request = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static AudioFocusRequestNotification parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AudioFocusRequestNotification(), data);
    }

    public static AudioFocusRequestNotification parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AudioFocusRequestNotification().mergeFrom(input);
    }
  }

  public static final class AudioFocusNotification extends
      com.google.protobuf.nano.MessageNano {

    // enum AudioFocusStateType
    public static final int AUDIO_FOCUS_STATE_GAIN = 1;
    public static final int AUDIO_FOCUS_STATE_GAIN_TRANSIENT = 2;
    public static final int AUDIO_FOCUS_STATE_LOSS = 3;
    public static final int AUDIO_FOCUS_STATE_LOSS_TRANSIENT_CAN_DUCK = 4;
    public static final int AUDIO_FOCUS_STATE_LOSS_TRANSIENT = 5;
    public static final int AUDIO_FOCUS_STATE_GAIN_MEDIA_ONLY = 6;
    public static final int AUDIO_FOCUS_STATE_GAIN_TRANSIENT_GUIDANCE_ONLY = 7;

    private static volatile AudioFocusNotification[] _emptyArray;
    public static AudioFocusNotification[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AudioFocusNotification[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .ca.yyx.hu.aap.protocol.AudioFocusNotification.AudioFocusStateType focus_state = 1;
    public int focusState;

    // optional bool unsolicited = 2;
    public boolean unsolicited;

    public AudioFocusNotification() {
      clear();
    }

    public AudioFocusNotification clear() {
      focusState = ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusNotification.AUDIO_FOCUS_STATE_GAIN;
      unsolicited = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.focusState != ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusNotification.AUDIO_FOCUS_STATE_GAIN) {
        output.writeInt32(1, this.focusState);
      }
      if (this.unsolicited != false) {
        output.writeBool(2, this.unsolicited);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.focusState != ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusNotification.AUDIO_FOCUS_STATE_GAIN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.focusState);
      }
      if (this.unsolicited != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.unsolicited);
      }
      return size;
    }

    @Override
    public AudioFocusNotification mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusNotification.AUDIO_FOCUS_STATE_GAIN:
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusNotification.AUDIO_FOCUS_STATE_GAIN_TRANSIENT:
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusNotification.AUDIO_FOCUS_STATE_LOSS:
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusNotification.AUDIO_FOCUS_STATE_LOSS_TRANSIENT_CAN_DUCK:
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusNotification.AUDIO_FOCUS_STATE_LOSS_TRANSIENT:
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusNotification.AUDIO_FOCUS_STATE_GAIN_MEDIA_ONLY:
              case ca.yyx.hu.aap.protocol.nano.Protocol.AudioFocusNotification.AUDIO_FOCUS_STATE_GAIN_TRANSIENT_GUIDANCE_ONLY:
                this.focusState = value;
                break;
            }
            break;
          }
          case 16: {
            this.unsolicited = input.readBool();
            break;
          }
        }
      }
    }

    public static AudioFocusNotification parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AudioFocusNotification(), data);
    }

    public static AudioFocusNotification parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AudioFocusNotification().mergeFrom(input);
    }
  }
}
